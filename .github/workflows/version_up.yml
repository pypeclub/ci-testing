name: version_up

on:
  push:
    branches: [main]


jobs:
  Ubuntu-latest:

    runs-on: ubuntu-latest

    steps:
    - name: ðŸš› Checkout Code
      uses: actions/checkout@v2

    - name: ðŸ†™ Find next version
      id: next_version
      uses: pypeclub/semver-release-action@master
      with:
        prefix: nightly/
        dry_run: true
        bump: patch
        github_token: ${{ secrets.GITHUB_TOKEN }}
    # Do something to modify the repo using `${{ steps.next_version.outputs.version }}`.

    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-((0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(\+([0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*))?"
        replace: "${{ steps.next_version.outputs.version }}"
        include: ./openpypCItes/version.py

    - name: Find and Replace 2
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "version \= \"(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-((0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(\+([0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*))?\" \# OpenPype"
        replace: "version = \"${{ steps.next_version.outputs.version }}\" # OpenPype"
        include: ./openpypCItes/version.py

    - name: ðŸ’¾ Commit changes
      id: git_commit
      run: |
        git config user.email ${{ secrets.CI_EMAIL }}
        git config user.name ${{ secrets.CI_USER }}
        git add .
        git commit -m "[Automated] Bump version"
        git push
        
        echo ::set-output name=sha::$(git rev-parse HEAD)

    - uses: everlytic/branch-merge@1.1.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        source_ref: 'main'
        target_branch: 'develop'
        commit_message_template: '[Automated] Merged {source_ref} into {target_branch}'

    - name: ðŸš€ Tag and Release
      uses: pypeclub/semver-release-action@master
      with:
        prefix: nightly/
        bump: ${{ steps.next_version.outputs.match }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        sha: ${{ steps.git_commit.outputs.sha }}